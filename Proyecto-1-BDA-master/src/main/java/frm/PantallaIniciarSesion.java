package frm;

import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 * 
 * @author eduar
 */
public class PantallaIniciarSesion extends javax.swing.JFrame {
    
    private static final String URL = "jdbc:mysql://localhost:3306/banco";
    private static final String USER = "banco";
    private static final String PASSWORD = "12345678";

    /**
     * Creates new form PantallaIniciarSesion
     */
    public PantallaIniciarSesion() {
        initComponents();
        
        // Definir un color de fondo (gris azulado oscuro)
        Color grisAzuladoOscuro = new Color(30, 36, 44); // Valores RGB
        // Cambiar el color de fondo del formulario
        getContentPane().setBackground(grisAzuladoOscuro);
        

                
        // Agregar un FocusListener al campo txtID
        txtID.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                // Cuando se gana el foco, si el texto es igual a "ID", borrarlo
                if (txtID.getText().equals("ID")) {
                    txtID.setText("");
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                // Cuando se pierde el foco, si el texto está vacío, restaurar "ID"
                if (txtID.getText().isEmpty()) {
                    txtID.setText("ID");
                }
            }
        });
        
        // Agregar un FocusListener al campo pw
        txtPass.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                // Cuando se gana el foco, si el texto es igual a "Contraseña", borrarlo
                if (txtPass.getText().equals("Contraseña")) {
                    txtPass.setText("");
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                // Cuando se pierde el foco, si el texto está vacío, restaurar "Contraseña"
                if (txtPass.getText().isEmpty()) {
                    txtPass.setText("Contraseña");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtID = new javax.swing.JTextField();
        btnSalir = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPass = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtID.setText("ID");

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Iniciar Sesion");

        txtPass.setText("Contraseña");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSalir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAceptar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(txtPass))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir)
                    .addComponent(btnAceptar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
        PantallaLogin pl = new PantallaLogin();
        pl.setVisible(true);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // Obtener el ID y la contraseña ingresados por el usuario
        String id = txtID.getText();
        String pass = txtPass.getText();
        
        // Validar la autenticación (esto debe ser adaptado a tu lógica real)
        if (validarCredenciales(id, pass)) {
            // Si las credenciales son válidas, mostrar la pantalla de menú principal
            PantallaMenuPrincipal menuPrincipal = new PantallaMenuPrincipal();
            menuPrincipal.setVisible(true);
            this.dispose(); // Cerrar la pantalla de inicio de sesión
        } else {
            // Si las credenciales son inválidas, mostrar un mensaje de error
            JOptionPane.showMessageDialog(this, "Credenciales incorrectas. Inténtelo de nuevo.", "Error de inicio de sesión", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnAceptarActionPerformed

    private boolean validarCredenciales(String id, String pass) {
        // Establecer la conexión a la base de datos
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD)) {
            // Consulta SQL para verificar las credenciales
            String sql = "SELECT contraseña FROM cliente WHERE id = ?";

            try (PreparedStatement stmt = conn.prepareStatement(sql)) {
                stmt.setString(1, id);
                try (ResultSet rs = stmt.executeQuery()) {
                    if (rs.next()) {
                        String contraseñaAlmacenada = rs.getString("contraseña");
                        return contraseñaAlmacenada.equals(pass);
                    } else {
                        // Si no se encuentra ningún registro con el ID dado
                        return false;
                    }
                }
            }
        } catch (SQLException ex) {
            // Manejar cualquier error de SQL
            ex.printStackTrace();
            return false;
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPass;
    // End of variables declaration//GEN-END:variables
}
